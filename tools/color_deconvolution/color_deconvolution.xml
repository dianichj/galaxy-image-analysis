<tool id="ip_color_deconvolution" name="Perform color decomposition" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@"> 
    <description></description>
    <macros>
        <import>creators.xml</import>
        <import>tests.xml</import>
        <token name="@TOOL_VERSION@">0.8</token>
        <token name="@VERSION_SUFFIX@">2</token>
    </macros>
    <creator>
        <expand macro="creators/bmcv"/>
    </creator>
    <edam_operations>
        <edam_operation>operation_3443</edam_operation>
    </edam_operations>
    <xrefs>
        <xref type="bio.tools">galaxy_image_analysis</xref>
    </xrefs>
    <requirements>
        <requirement type="package" version="0.24.0">scikit-image</requirement>
        <requirement type="package" version="11.0.0">pillow</requirement>
        <requirement type="package" version="1.5.2">scikit-learn</requirement>
        <requirement type="package" version="2.1.2">numpy</requirement>
        <requirement type="package" version="2024.9.20">tifffile</requirement>
    </requirements>
    <command detect_errors="aggressive">
        <![CDATA[ 
        python '$__tool_directory__/color_deconvolution.py' '$input' '$output' '$convtype'
        ]]>
    </command>
    <inputs>
        <param name="input" type="data" format="tiff,png,jpg,bmp" label="Image file with 3 channels"/>
        <param name="convtype" type="select" label="Transformation type">
            <option value="ica" selected="True">Independent Component Analysis (ica)</option>
            <option value="pca">Principal Component Analysis (pca)</option>
            <option value="nmf">Non-Negative Matrix Factorization (nmf)</option>
            <option value="fa">Factor Analysis (fa)</option>
            <option value="xyz2rgb">Convert XYZ to RGB (xyz2rgb)</option>
            <option value="rgb_from_rbd">Generate RGB from RBD (rgb_from_rbd)</option>
            <option value="rgb_from_hdx">Generate RGB from HDX (rgb_from_hdx)</option>
            <option value="rgb2hsv">Convert RGB to HSV (rgb2hsv)</option>
            <option value="rgb_from_bro">Generate RGB from BRO (rgb_from_bro)</option>
            <option value="bpx_from_rgb">Generate BPX from RGB (bpx_from_rgb)</option>
            <option value="hed_from_rgb">Convert RGB to HED (hed_from_rgb)</option>
            <option value="rgbcie2rgb">Convert RGB CIE to RGB (rgbcie2rgb)</option>
            <option value="hdx_from_rgb">Generate HDX from RGB (hdx_from_rgb)</option>
            <option value="xyz2luv">Convert XYZ to LUV (xyz2luv)</option>
            <option value="rgb2lab">Convert RGB to LAB (rgb2lab)</option>
            <option value="hpx_from_rgb">Generate HPX from RGB (hpx_from_rgb)</option>
            <option value="rgb_from_fgx">Generate RGB from FGX (rgb_from_fgx)</option>
            <option value="rgb_from_gdx">Generate RGB from GDX (rgb_from_gdx)</option>
            <option value="lab2xyz">Convert LAB to XYZ (lab2xyz)</option>
            <option value="rgb_from_hpx">Generate RGB from HPX (rgb_from_hpx)</option>
            <option value="lab2rgb">Convert LAB to RGB (lab2rgb)</option>
            <option value="rgb2rgbcie">Convert RGB to RGB CIE (rgb2rgbcie)</option>
            <option value="bex_from_rgb">Generate BEX from RGB (bex_from_rgb)</option>
            <option value="xyz2lab">Convert XYZ to LAB (xyz2lab)</option>
            <option value="rgb_from_bex">Generate RGB from BEX (rgb_from_bex)</option>
            <option value="fgx_from_rgb">Generate FGX from RGB (fgx_from_rgb)</option>
            <option value="rbd_from_rgb">Generate RBD from RGB (rbd_from_rgb)</option>
            <option value="rgb2hed">Convert RGB to HED-Hematoxylin and Eosin (rgb2hed)</option>
            <option value="hed2rgb">HED-Hematoxylin to RGB (hed2rgb)</option>
            <option value="luv2rgb">Convert LUV to RGB (luv2rgb)</option>
            <option value="luv2xyz">Convert LUV to XYZ (luv2xyz)</option>
            <option value="lch2lab">Convert LCH to LAB (lch2lab)</option>
            <option value="rgb2luv">Convert RGB to LUV (rgb2luv)</option>
            <option value="ahx_from_rgb">Generate AHX from RGB (ahx_from_rgb)</option>
            <option value="rgb_from_hax">Generate RGB from HAX (rgb_from_hax)</option>
            <option value="hax_from_rgb">Generate HAX from RGB (hax_from_rgb)</option>
            <option value="rgb_from_bpx">Generate RGB from BPX (rgb_from_bpx)</option>
            <option value="rgb2xyz">Convert RGB to XYZ (rgb2xyz)</option>
            <option value="gdx_from_rgb">Generate GDX from RGB (gdx_from_rgb)</option>
            <option value="rgb_from_ahx">Generate RGB from AHX (rgb_from_ahx)</option>
            <option value="lab2lch">Convert LAB to LCH (lab2lch)</option>
            <option value="rgb_from_hed">Generate RGB from HED (rgb_from_hed)</option>
            <option value="bro_from_rgb">Generate BRO from RGB (bro_from_rgb)</option>
            <option value="hsv2rgb">Convert HSV to RGB (hsv2rgb)</option>
        </param>
    </inputs>
    <outputs>
        <data format="tiff" name="output"/>
    </outputs>
    <tests>
        <test>
            <param name="input" value="galaxyIcon_noText.png" />
            <param name="convtype" value="rgb2hsv" />
            <expand macro="tests/intensity_image_diff" name="output" value="galaxyIcon_noText.tiff" ftype="tiff"/>
        </test>
    </tests>
    <help>

        **What it does**

        This tools performs several color deconvolution techniques.

    </help>
    <citations>
      <citation type="doi">10.7717/peerj.453</citation>
      <citation type="bibtex">@inproceedings{sklearn_api,
            author = {Lars Buitinck and Gilles Louppe and Mathieu Blondel and
                      Fabian Pedregosa and Andreas Mueller and Olivier Grisel and
                      Vlad Niculae and Peter Prettenhofer and Alexandre Gramfort
                      and Jaques Grobler and Robert Layton and Jake VanderPlas and
                      Arnaud Joly and Brian Holt and Ga{\"{e}}l Varoquaux},
            title = {{API} design for machine learning software: experiences from the scikit-learn project},
            booktitle = {ECML PKDD Workshop: Languages for Data Mining and Machine Learning},
            year = {2013},
            pages = {108--122},
        }</citation>
    </citations>
</tool>
